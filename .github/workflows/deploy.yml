name: Deploy to Dev Server

on:
  push:
    branches:
      - develop

jobs:

  test-services:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v3

      - name: Install dependencies
        uses: php-actions/composer@v6

      - name: PHPUnit Tests for Services
        uses: php-actions/phpunit@v3
        with:
          version: 9.6
          bootstrap: vendor/autoload.php
          configuration: tests/phpunit.xml
          args: --testsuite=Services

  test-routes:
    needs: [test-services]
    runs-on: ubuntu-latest
    services:
      mariadb:
        image: mariadb:10.5
        env:
          MYSQL_ROOT_PASSWORD: root_password
          MYSQL_DATABASE: test_database
        ports:
          - 3306:3306
        options: --health-cmd="mysqladmin ping" --health-interval=10s --health-timeout=5s --health-retries=3

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Setup PHP
        uses: shivammathur/setup-php@v2
        with:
          php-version: '8.2'

      - name: Start MariaDB
        working-directory: docker 
        run: docker compose up -d db

      - name: Install dependencies
        uses: php-actions/composer@v6

      - name: Prepare database
        run: |
          php bin/console doctrine:schema:update --force --env=test
          php bin/console doctrine:fixtures:load --no-interaction --env=test

      - name: PHPUnit Tests for Controllers
        env:
          DATABASE_URL: mysql://root:root_password@localhost:3306/test_database
        run: php bin/phpunit --testsuite=Controllers

# tests:
#     needs: update
#     runs-on: ubuntu-latest
#     steps:
#       - name: Run tests
#         uses: ./.github/workflows/tests.yml

#   qa:
#     needs: tests
#     runs-on: ubuntu-latest
#     steps:
#       - name: Run QA checks
#         uses: ./.github/workflows/qa.yml

# update:
  #   runs-on: ubuntu-latest

  #   steps:
  #     - name: Checkout code
  #       uses: actions/checkout@v2

  #     - name: SSH into server and run Docker Compose
  #       uses: appleboy/ssh-action@v1.0.3
  #       with:
  #         host: ${{ secrets.SERVER_HOST }}
  #         username: ${{ secrets.SERVER_USERNAME }}
  #         password: ${{ secrets.SSH_PRIVATE_KEY }}
  #         port: ${{ secrets.SERVER_SSH_PORT }}
  #         script: |
  #           cd /var/www/symfony-ci-cd
  #           git checkout develop
  #           git pull origin develop
  #           docker compose -f ./docker/docker-compose.yml up -d --build

#   merge:
#     needs: qa
#     runs-on: ubuntu-latest
#     if: success()
#     steps:
#       - name: Checkout code
#         uses: actions/checkout@v2

#       - name: Merge develop into release
#         run: |
#           git checkout release
#           git merge develop
#           git push origin release